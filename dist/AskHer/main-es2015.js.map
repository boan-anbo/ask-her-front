{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-guard.service.ts","./src/app/auth/auth.service.ts","./src/app/back/back.component.ts","./src/app/back/back.component.html","./src/app/data.service.ts","./src/app/main/entry.model.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/speech.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {BackComponent} from './back/back.component';\nimport {MainComponent} from './main/main.component';\nimport {AuthGuard} from './auth/auth-guard.service';\n\n\nconst routes: Routes = [\n  // { path: ':id/back', component: BackComponent, canActivate: [AuthGuard] },\n  { path: '', component: MainComponent},\n  { path: 'back', component: BackComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AskHer';\n}\n","<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BackComponent } from './back/back.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {MainComponent} from './main/main.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatListModule} from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RecaptchaModule} from 'ng-recaptcha';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {AuthGuard} from './auth/auth-guard.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BackComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatListModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    RecaptchaModule,\n    MatExpansionModule,\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport {DataService} from '../data.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router, private dataService: DataService) {\r\n\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> {\r\n    console.log(state)\r\n    console.log(next)\r\n    return this.dataService.checkAuth(next.params?.id).pipe(\r\n      map(data => {\r\n        console.log(data)\r\n        if (data === false) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    )\r\n    // if (this.authService.isRouteAuthenticated()) {\r\n    //   console.log(state.toString());\r\n    //   // return true;\r\n    // }\r\n    // this.router.navigate['back'];\r\n    // return false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {DataService} from '../data.service';\n\n@Injectable(\n  {\n  providedIn: 'root'\n  }\n)\nexport class AuthService {\n\n  private isAuthenticated: boolean;\n  constructor(private dataService: DataService\n  ) { }\n\n  public isRouteAuthenticated(): boolean {\n    return this.isAuthenticated;\n  }\n\n  public setIsAuthenticated(isAuth: boolean): void {\n    this.isAuthenticated = isAuth;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../data.service';\nimport {UploadAnswer} from '../main/entry.model';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {AuthService} from '../auth/auth.service';\n\n\n@Component({\n  selector: 'app-back',\n  templateUrl: './back.component.html',\n  styleUrls: ['./back.component.css']\n})\nexport class BackComponent implements OnInit {\n  public allUploadedAnswers;\n\n  constructor(private dataService: DataService, private snackbar: MatSnackBar, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.loadAllUploadedAnswers();\n    console.log(this.allUploadedAnswers);\n  }\n\n  async loadAllUploadedAnswers() {\n    this.dataService.getAllUpload().subscribe((data) => {\n      console.log(data)\n      this.allUploadedAnswers = data;\n    });\n  }\n\n  async approveUploadedAnswer(item: UploadAnswer) {\n    this.dataService.approveUploadedAnswer(item._id).subscribe((data) => {\n      console.log(data);\n      this.loadAllUploadedAnswers();\n      this.snackbar.open(`Answer Approved: ${item.answer?.message}`, '', {duration: 2000});\n\n    });\n  }\n\n\n  async deleteUploadedAnswer(item: UploadAnswer) {\n      if (window.confirm(`确定要删除吗（可按回车键确认）?\\n ${item.answer?.message}`)) {\n        this.dataService.deleteUploadedAnswer(item._id).subscribe((data) => {\n          console.log(data);\n          this.loadAllUploadedAnswers();\n        });\n        this.snackbar.open(`Answer Deleted: ${item.answer?.message}`, 'OK', {duration: 2000});\n      }\n    }\n}\n","<mat-list dense>\n  <mat-list-item *ngIf=\"this.allUploadedAnswers?.length === 0 || !this.allUploadedAnswers\">\n    <h3>目前没有新的回答需要审核</h3>\n  </mat-list-item>\n  <mat-list-item *ngFor=\"let item of this.allUploadedAnswers\">\n    <p>\n    {{item.answer?.message}}\n    </p>\n\n    <button mat-icon-button id=\"approve\">\n      <mat-icon (click)=\"this.approveUploadedAnswer(item)\">check</mat-icon>\n    </button>\n    <button mat-icon-button id=\"delete\">\n      <mat-icon (click)=\"this.deleteUploadedAnswer(item)\">delete</mat-icon>\n    </button>\n\n  </mat-list-item>\n</mat-list>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  // tslint:disable-next-line:variable-name\n  private _apiBase = 'http://167.172.212.141:4001'; // remote\n  // private _apiBase = 'https://www.askjiang.com'; // remote\n  // private _apiBase = 'http://localhost:4001'; // local\n  // tslint:disable-next-line:variable-name\n  private _listAllUpload = '/uploadanswer/listall';\n  // tslint:disable-next-line:variable-name\n  private _deleteUploadedAnswer = '/uploadanswer/delete/'\n  // tslint:disable-next-line:variable-name\n  private _approveUploadedAnswer = '/uploadanswer/approve/'\n  // tslint:disable-next-line:variable-name\n  private _backEntry = '/entry/back/'\n  // tslint:disable-next-line:variable-name\n  private _listAllEntries = '/entry/listall'\n  // tslint:disable-next-line:variable-name\n  private _getRandomEntry = '/entry/find/random'\n  // tslint:disable-next-line:variable-name\n  private _uploadAnswer = '/uploadanswer/'\n  // tslint:disable-next-line:variable-name\n  private _upvoteAnswer = '/upvote/answer/'\n  // tslint:disable-next-line:variable-name\n  private _upvoteQuestion = '/upvote/question/'\n\n  private UpVoteAnswerUrl(answerId: string): string {\n    return this._apiBase + this._upvoteAnswer + answerId;\n  }\n\n  private UpvoteQuestionUrl(questionId: string): string {\n    return this._apiBase + this._upvoteQuestion + questionId;\n  }\n\n  private uploadQuestionUrl(questionId: string): string {\n    return this._apiBase + this._uploadAnswer + questionId;\n  }\n  public getAllUpload() {\n    return this.http.get(this._apiBase + this._listAllUpload);\n  }\n\n  public deleteUploadedAnswer(id: string) {\n    return this.http.get(this._apiBase + this._deleteUploadedAnswer + id);\n  }\n\n\n  public approveUploadedAnswer(id: any) {\n    return this.http.get(this._apiBase + this._approveUploadedAnswer + id);\n  }\n\n  public checkAuth(id: string) {\n    return this.http.get(this._apiBase + this._backEntry + id);\n  }\n\n  public getAllEntries() {\n    return this.http.get(this._apiBase + this._listAllEntries);\n  }\n\n  public getOneRandomEntry() {\n    return this.http.get(this._apiBase + this._getRandomEntry);\n  }\n\n  public uploadAnswer(questionId: string, message: string, authorId: string) {\n    // console.log({message, authorId});\n    return this.http.put(this.uploadQuestionUrl(questionId), {message, authorId});\n  }\n\n  public UpvoteAnswer(answerId: string) {\n    return this.http.get(this.UpVoteAnswerUrl(answerId));\n  }\n\n  public UpvoteQuestion(questionId: string) {\n    return this.http.get(this.UpvoteQuestionUrl(questionId));\n  }\n\n\n}\n","export class Entry {\r\n  constructor() {\r\n    this.question = {\r\n      text: '',\r\n      authorId: '',\r\n      heard: 0,\r\n    };\r\n    this.answers = [\r\n      new Answer()\r\n    ];\r\n  }\r\n  _id: string;\r\n  question: Question;\r\n  answers: Answer[];\r\n}\r\n\r\nexport class Question {\r\n  text: string;\r\n  authorId: string;\r\n  heard: number;\r\n}\r\n\r\nexport class Answer {\r\n  constructor(message = '', authorId = '') {\r\n    this.message = message;\r\n    this.authorId = authorId;\r\n    this.upvote = 0;\r\n    }\r\n\r\n  answerId: string;\r\n  message: string;\r\n  authorId: string;\r\n  upvote: number;\r\n}\r\n\r\nexport class UploadAnswer {\r\n  _id: string;\r\n  questionId: string;\r\n  answer: {\r\n    message: string;\r\n    authorId: string;\r\n    upvote: number;\r\n  };\r\n}\r\n\r\nexport class EntryCollection {\r\n  entries: Entry[];\r\n}\r\n\r\n\r\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\nimport {Answer, Entry} from './entry.model';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {DataService} from '../data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Subject, Subscription} from 'rxjs';\nimport {SpeechService} from '../speech.service';\nimport {throttleTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public currentEntry: Entry = new Entry();\n  // public currentAnswer: Answer = new Answer();\n  private preLoadedEntry: Entry;\n  public answerPointer = 0;\n  public writingAnswer = false;\n  public inputForm: FormGroup;\n  public inputSubmitLoading = false;\n\n  public alreadyHeard = false;\n  public alreadyUpvoted = {};\n  public loadingEntry = false;\n  private upvoteSubscription: Subscription;\n  private loadingSubscription: Subscription;\n  // to prevent loading questions too frequently\n  private preLoadQuestionSubject: Subject<any> = new Subject();\n\n  // tslint:disable-next-line:max-line-length\n  private uploadAnswerSubscription: Subscription;\n  private iHeardThatSubscription: Subscription;\n  private preloadingSubscription: Subscription;\n\n  constructor(private fb: FormBuilder,\n              private dataService: DataService,\n              private snackbar: MatSnackBar,\n              private speechService: SpeechService) {\n  }\n\n  ngOnInit(): void {\n    // this.preLoadQuestionSubject.pipe(throttleTime(100)).subscribe(() => {\n    //   this.PreLoadRandomQuestion();\n    // });\n    this.LoadRandomQuestion();\n    // this.PreLoadRandomQuestion()\n    // this.LoadAnswer();\n    this.InitializeQuestion();\n    this.InitializeInputForm();\n\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.preLoadQuestionSubject.unsubscribe();\n  }\n\n  // async uploadAnswer(questionId, message, authorId) {\n  //   this.dataService.uploadAnswer(questionId, message, authorId).subscribe((data) => {\n  //     console.log(data);\n  //   });\n  // }\n\n  async submitHandler() {\n    this.inputSubmitLoading = true;\n    const formValue = this.inputForm.value;\n    try {\n        this.uploadAnswerSubscription = this.dataService.uploadAnswer(this.currentEntry._id, formValue.message, formValue.authorId)\n          .subscribe((data) => {\n        console.log(data);\n        if (data) {\n          this.snackbar.open('你的回答已收录', `稍后更新♥`, {duration: 3000});\n          this.InitializeInputForm();\n          this.ExitWritingMode();\n        } else {\n\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  public setCurrentEntry(entryToUse: Entry): void {\n    if (!this.currentEntry) {\n      this.currentEntry = new Entry();\n    }\n    this.currentEntry = entryToUse;\n  }\n\n\n  IHeardThat() {\n    if (this.alreadyHeard === false) {\n    this.currentEntry.question.heard += 1;\n    this.iHeardThatSubscription = this.dataService.UpvoteQuestion(this.currentEntry._id).subscribe((data) =>\n        console.log(data)\n      );\n    this.alreadyHeard = true;\n    }\n  }\n\n  LetMeAnswer() {\n    this.writingAnswer = true;\n  }\n\n  LeftArrow() {\n    if (this.answerPointer > 0) {\n      this.answerPointer -= 1;\n      // this.LoadAnswer();\n    }\n  }\n\n  RightArrow() {\n    if (this.answerPointer < this.currentEntry.answers.length - 1) {\n      this.answerPointer += 1;\n      // this.LoadAnswer();\n    }\n  }\n\n  IsLastAnswer(): boolean {\n    return (this.answerPointer === this.currentEntry.answers.length - 1) || this.currentEntry.answers.length === 0 ? true : false;\n  }\n\n  IsFirstAnswer(): boolean {\n    return (this.answerPointer === 0) ? true : false;\n  }\n\n  ExitWritingMode(): void {\n    this.writingAnswer = false;\n    this.inputSubmitLoading = false;\n  }\n\n  public IsThereAnswer(): boolean {\n    return this.currentEntry.answers.length === 0 ? false : true;\n  }\n  private InitializeQuestion() {\n    this.alreadyHeard = false;\n    this.ResetAnswerPointer();\n    this.InitializeAnswerUpvote();\n  }\n\n  private InitializeAnswerUpvote() {\n    this.alreadyUpvoted = [];\n  }\n  private ResetAnswerPointer() {\n    this.answerPointer = 0;\n  }\n  private InitializeInputForm() {\n    this.inputForm = this.fb.group({\n      message: '',\n      authorId: '匿名'\n    });\n    this.inputSubmitLoading = false;\n\n  }\n\n  public IUpVoteThat() {\n    if (!this.alreadyUpvoted[this.answerPointer.toString()]) {\n      this.currentEntry.answers[this.answerPointer].upvote += 1;\n      this.upvoteSubscription = this.dataService.UpvoteAnswer(this.currentEntry.answers[this.answerPointer].answerId).subscribe((data) =>\n        console.log(data)\n      );\n      this.alreadyUpvoted[this.answerPointer.toString()] = true;\n    }\n  }\n  public addNewAnswer(message: string, authorId: string) {\n    const newAnswer = new Answer(message, authorId);\n    this.currentEntry.answers.unshift(newAnswer);\n    this.ResetAnswerPointer();\n    // this.LoadAnswer()\n    console.log(this.currentEntry.answers[0].message);\n  }\n\n    public NextQuestion() {\n    // if (this.preLoadedEntry) {\n    //   this.MovePreToCurrentEntry();\n    // }\n    // this.preLoadQuestionSubject.next();\n      this.LoadRandomQuestion();\n      this.InitializeQuestion();\n    this.ResetButtons();\n    }\n\n    private MovePreToCurrentEntry() {\n      this.setCurrentEntry(this.preLoadedEntry);\n      this.preLoadedEntry = null;\n      this.preLoadQuestionSubject.next();\n    }\n\n    private LoadRandomQuestion() {\n      // return this.sampleEntryData.entries[Math.floor(Math.random() * this.sampleEntryData.entries.length)];\n      this.loadingEntry = true;\n      this.speechService.cancelSpeech();\n      this.loadingSubscription = this.dataService.getOneRandomEntry().subscribe((data) => {\n        console.log('Current', data);\n        const entry: Entry = new Entry();\n        Object.assign(entry, data);\n        this.setCurrentEntry(entry);\n        this.speechService.sayQuestion(entry.question.text);\n        this.loadingEntry = false;\n        this.loadingSubscription?.unsubscribe();\n\n      });\n    }\n\n    private PreLoadRandomQuestion() {\n      this.preloadingSubscription = this.dataService.getOneRandomEntry().subscribe((data) => {\n        console.log('Preload', data);\n        const entry: Entry = new Entry();\n        Object.assign(entry, data);\n        this.preLoadedEntry = entry;\n        this.preloadingSubscription?.unsubscribe();\n      });\n    }\n\n    private UnsubscribeAll() {\n      this.upvoteSubscription?.unsubscribe();\n      this.loadingSubscription?.unsubscribe();\n      this.uploadAnswerSubscription?.unsubscribe();\n      this.preloadingSubscription?.unsubscribe();\n    }\n    private ResetButtons() {\n      this.inputSubmitLoading = false;\n    }\n\n}\n","<mat-grid-list cols=\"1\" rowHeight=\"fit\">\n  <mat-grid-tile id=\"question-tile\" rowspan=\"5\">\n    <mat-grid-tile-header color=\"accent\">\n      <span id=\"app-title-span\">\n        <span id=\"app-title-name\">江山娇</span>\n        <span>可以说话</span>\n      <mat-icon id=\"app-title-icon\">speaker_notes</mat-icon>\n      </span></mat-grid-tile-header>\n    <mat-card>\n\n    <mat-card-header>\n\n      <mat-card-title id=\"question-title\">\n        {{ currentEntry.question.text }}\n      </mat-card-title>\n\n      <mat-card-subtitle id=\"question-author\">  {{ this.currentEntry.question.authorId}}</mat-card-subtitle>\n\n    </mat-card-header>\n      <mat-card-actions>\n        <button mat-button (click)=\"IHeardThat()\" id=\"heard-button\"><span id=\"heard-text\">我听过 </span> <span id=\"heardNumber\">{{ this.currentEntry.question.heard}} </span></button>\n      </mat-card-actions>\n    </mat-card>\n<!--    <mat-grid-tile-footer>Footer</mat-grid-tile-footer>-->\n  </mat-grid-tile>\n\n\n  <mat-grid-tile rowspan=\"1\">\n    <button mat-fab id=\"next-answer\" color=\"warn\"  (click)=\"NextQuestion()\" [disabled]=\"loadingEntry || writingAnswer\"><mat-icon>face</mat-icon></button>\n\n  </mat-grid-tile>\n\n\n  <mat-grid-tile *ngIf=\"!writingAnswer; else writingPanel\" id=\"answer-tile\" rowspan=\"4\">\n\n<!--    <mat-grid-tile-header>Header</mat-grid-tile-header>-->\n\n    <button mat-button id=\"left-arrow\" color=\"accent\" (click)=\"LeftArrow()\" [disabled]=\"IsFirstAnswer()\">\n      <mat-icon class=\"arrow-button-icon\">arrow_left</mat-icon>\n    </button>\n\n\n    <mat-card id=\"answer-card\" *ngIf=\"IsThereAnswer(); else noAnswer\">\n\n      <mat-card-header>\n        <mat-card-title id=\"answer-message\">\n      {{ this.currentEntry.answers[this.answerPointer].message }}\n        </mat-card-title>\n        <mat-card-subtitle> {{this.currentEntry.answers[this.answerPointer].authorId}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-actions>\n        <button mat-flat-button disabled id=\"answer-index-button\"> <span id=\"answer-index-current\"> {{ answerPointer + 1 }}</span>  / <span id=\"answer-index-total\"> {{ this.currentEntry.answers.length }} </span></button>\n        <button mat-button (click)=\"IUpVoteThat()\"><span><mat-icon id=\"favorite\">favorite_border</mat-icon> </span> <span id=\"upVoteNumber\">{{ this.currentEntry.answers[this.answerPointer].upvote}} </span></button>\n      </mat-card-actions>\n\n\n    </mat-card>\n\n\n    <ng-template #noAnswer><p id=\"no-answer\">无人回答</p></ng-template>\n\n    <button mat-button id=\"right-arrow\" color=\"accent\" [disabled]=\"IsLastAnswer()\" (click)=\"RightArrow()\">\n      <mat-icon class=\"arrow-button-icon\">arrow_right</mat-icon>\n    </button>\n\n\n<!--    <mat-grid-tile-footer>Footer</mat-grid-tile-footer>-->\n\n  </mat-grid-tile>\n\n\n  <ng-template #writingPanel>\n  <mat-grid-tile id=\"writing-tile\"  rowspan=\"4\">\n\n<!--    <mat-grid-tile-header>Header</mat-grid-tile-header>-->\n\n    <form class=\"input-form\" ngNativeValidate  [formGroup]=\"inputForm\" (ngSubmit)=\"submitHandler()\">\n      <mat-form-field class=\"input-full-width\" id=\"inputText\">\n        <mat-label>我的回答</mat-label>\n        <textarea  required matInput #message maxlength=\"140\" placeholder=\"我想说\" autocomplete=\"off\" cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\"cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"5\" formControlName=\"message\"></textarea>\n        <mat-hint align=\"start\"><strong></strong> </mat-hint>\n        <mat-hint  align=\"end\">{{message.value.length}} / 140字</mat-hint>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"input-full-width\" id=\"inputId\">\n        <mat-label>ID</mat-label>\n        <input matInput #id maxlength=\"20\" autocomplete=\"on\" formControlName=\"authorId\" value=\"匿名\">\n        <mat-hint align=\"start\"><strong></strong> </mat-hint>\n        <mat-hint  align=\"end\">{{id.value.length}} / 20字符</mat-hint>\n      </mat-form-field>\n\n      <button id=\"submit-button\" mat-stroked-button [disabled]=\"this.inputSubmitLoading\">\n        <mat-icon id=\"submit-button-icon\">send</mat-icon>\n      </button>\n\n    </form>\n\n\n<!--    <mat-grid-tile-footer>Footer</mat-grid-tile-footer>-->\n\n  </mat-grid-tile>\n\n  </ng-template>\n\n\n  <mat-grid-tile rowspan=\"1\">\n    <button mat-flat-button id=\"let-me-answer\" color=\"accent\"  (click)=\"LetMeAnswer()\" [disabled]=\"writingAnswer\"><mat-icon>speaker_notes</mat-icon></button>\n    <button mat-flat-button color=\"accent\" (click)=\"ExitWritingMode()\" [disabled]=\"!writingAnswer\"><mat-icon>cancel</mat-icon></button>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeechService {\n\n  constructor() { }\n\n  public sayQuestion(utterance) {\n    const utteranceInstance = new SpeechSynthesisUtterance(utterance);\n    utteranceInstance.lang = 'zh-Chinese'\n    utteranceInstance.rate = 1.5;\n    speechSynthesis.speak(utteranceInstance)\n  }\n  public cancelSpeech() {\n    speechSynthesis.cancel()\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}